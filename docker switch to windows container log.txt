========== Checking for Container Prerequisites ==========
Verifying that Docker Desktop is installed...
Docker Desktop is installed.
========== Verifying that Docker Desktop is running... ==========
Verifying that Docker Desktop is running...
Docker Desktop is running.
========== Verifying Docker OS ==========
Verifying that Docker Desktop's operating system mode matches the project's target operating system...
Switching Docker to use Windows containers...
C:\Program Files\Docker\Docker\DockerCli.exe -SwitchDaemon
Docker is now using Windows containers.
Docker Desktop's operating system mode matches the project's target operating system.
========== Pulling Required Images ==========
Checking for missing Docker images...
Pulling Docker images. To cancel this download, close the command prompt window.
docker pull mcr.microsoft.com/dotnet/aspnet:5.0
Docker images are ready.
========== Warming up container(s) for NetCoreMVCWebAppDemo ==========
Starting up container(s)...
docker build -f "C:\Repos\NetCoreMVCWebAppDemo\NetCoreMVCWebAppDemo\Dockerfile" --force-rm -t netcoremvcwebappdemo:dev --target base  --label "com.microsoft.created-by=visual-studio" --label "com.microsoft.visual-studio.project-name=NetCoreMVCWebAppDemo" "C:\Repos\NetCoreMVCWebAppDemo" 
#1 [internal] load build definition from Dockerfile
#1 sha256:ad5fe66ffbd420d8e8024c3133b092df106f2c3bf6a492eaebb99e0a7a0b6778
#1 transferring dockerfile: 1.06kB 0.0s done
#1 DONE 0.1s

#2 [internal] load .dockerignore
#2 sha256:c82287dbeed278e903eeff6ec74a859c4df22987125dfbb10b752538c775876d
#2 transferring context: 382B done
#2 DONE 0.0s

#3 [internal] load metadata for mcr.microsoft.com/dotnet/aspnet:5.0
#3 sha256:3b35130338ebb888f84ec0aa58f64d182f10a676a625072200f5903996d93690
#3 DONE 0.0s

#4 [base 1/2] FROM mcr.microsoft.com/dotnet/aspnet:5.0
#4 sha256:31acc33a1535ed7869167d21032ed94a0e9b41bbf02055dc5f04524507860176
#4 DONE 0.3s

#5 [base 2/2] WORKDIR /app
#5 sha256:56abde746b4f39a24525b2b730b2dfb6d9688bcf704d367c86a4753aefff33f6
#5 DONE 0.6s

#6 exporting to image
#6 sha256:e8c613e07b0b7ff33893b694f7759a10d42e180f2b4dc349fb57dc6b71dcab00
#6 exporting layers 0.0s done
#6 writing image sha256:0d48226aae94b73ed5c62bfd9cb22db660b9e3beeecc7155d3294f52f402a369 done
#6 naming to docker.io/library/netcoremvcwebappdemo:dev done
#6 DONE 0.1s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
docker run -dt -v "C:\Users\SKlok\onecoremsvsmon\16.8.0715.0:C:\remote_debugger:ro" -v "C:\Repos\NetCoreMVCWebAppDemo\NetCoreMVCWebAppDemo:C:\app" -v "C:\Repos\NetCoreMVCWebAppDemo:c:\src" -v "C:\Users\SKlok\AppData\Roaming\Microsoft\UserSecrets:C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets:ro" -v "C:\Users\SKlok\AppData\Roaming\ASP.NET\Https:C:\Users\ContainerUser\AppData\Roaming\ASP.NET\Https:ro" -v "C:\Users\SKlok\.nuget\packages\:c:\.nuget\fallbackpackages2" -v "C:\Microsoft\Xamarin\NuGet\:c:\.nuget\fallbackpackages" -e "DOTNET_USE_POLLING_FILE_WATCHER=1" -e "ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true" -e "ASPNETCORE_ENVIRONMENT=Development" -e "ASPNETCORE_URLS=https://+:443;http://+:80" -e "NUGET_PACKAGES=c:\.nuget\fallbackpackages2" -e "NUGET_FALLBACK_PACKAGES=c:\.nuget\fallbackpackages;c:\.nuget\fallbackpackages2" -P --name NetCoreMVCWebAppDemo --entrypoint C:\remote_debugger\x64\msvsmon.exe netcoremvcwebappdemo:dev /noauth /anyuser /silent /nostatus /noclrwarn /nosecuritywarn /nofirewallwarn /nowowwarn /fallbackloadremotemanagedpdbs /timeout:2147483646 /LogDebuggeeOutputToStdOut 
docker: Error response from daemon: mount denied:
the source path "\\Users\\SKlok\\AppData\\Roaming\\Microsoft\\UserSecrets:C:\\Users\\ContainerUser\\AppData\\Roaming\\Microsoft\\UserSecrets:ro"
too many colons.
See 'docker run --help'.
A non-critical error occurred while getting the container(s) ready. Your project(s) will continue to function normally. The error was: Docker command failed with exit code 125.
docker: Error response from daemon: mount denied:
the source path "\\Users\\SKlok\\AppData\\Roaming\\Microsoft\\UserSecrets:C:\\Users\\ContainerUser\\AppData\\Roaming\\Microsoft\\UserSecrets:ro"
too many colons.
See 'docker run --help'.
If the error persists, try restarting Docker Desktop.
